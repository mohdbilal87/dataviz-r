<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>informationisbeautiful on Data Viz in ggplot2</title>
    <link>/dataviz-r/tags/informationisbeautiful/</link>
    <description>Recent content in informationisbeautiful on Data Viz in ggplot2</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/dataviz-r/tags/informationisbeautiful/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rotten Tomatoes</title>
      <link>/dataviz-r/2019/11/13/rotten-tomatoes/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/13/rotten-tomatoes/</guid>
      <description>Original ImageThe image below was featured in Information is Beatiful. https://informationisbeautiful.net/visualizations/star-wars-last-jedi-one-of-the-biggest-rotten-tomatoes-audience-vs-critics-score-splits-ever/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was sourced from data export options in the link above.
library(ggplot2)library(ggrepel)library(dplyr)data &amp;lt;- read.csv(&amp;#39;./data/movies.csv&amp;#39;, stringsAsFactors = F) %&amp;gt;% janitor::clean_names() %&amp;gt;% filter(x_gap &amp;gt;= 15, genre %in% c(&amp;quot;Sci-fi / Fantasy&amp;quot;,&amp;quot;Thriller&amp;quot;,&amp;quot;horror&amp;quot;,&amp;quot;Horror&amp;quot;,&amp;quot;drama&amp;quot;,&amp;quot;Drama&amp;quot;,&amp;quot;comedy&amp;quot;,&amp;quot;Comedy&amp;quot;,&amp;quot;Action / Adventure&amp;quot;)) %&amp;gt;% mutate(year = year, budget_million = as.numeric(budget_million),radius = sqrt(budget_million/pi)) %&amp;gt;% filter(budget_million!</description>
    </item>
    
    <item>
      <title>Gender Gap</title>
      <link>/dataviz-r/2019/11/11/gender-gap/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/11/gender-gap/</guid>
      <description>Original ImageThe image below was published in Information is Beautiful.https://informationisbeautiful.net/visualizations/gender-pay-gap/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was sourced from US Bureau of Labor Statistics, UK Office of National Statistics, The Guardian Datablog.
library(ggplot2)library(ggalt)library(dplyr)data &amp;lt;- readxl::read_xlsx(&amp;#39;./data/gender_gap.xlsx&amp;#39;, sheet = &amp;quot;US&amp;quot;) %&amp;gt;%janitor::clean_names()### Remove duplicates based on occupation without changing orderdata &amp;lt;- distinct(data,occupation, .keep_all= TRUE) %&amp;gt;% mutate(row_no = row_number())categories &amp;lt;- c(&amp;quot;admin &amp;amp; organisation&amp;quot;,&amp;quot;Care &amp;amp; education&amp;quot;,&amp;quot;Creative &amp;amp; media&amp;quot;,&amp;quot;Law &amp;amp; justice&amp;quot;,&amp;quot;Manual Work&amp;quot;,&amp;quot;Sales &amp;amp; serving others&amp;quot;,&amp;quot;Science, tech &amp;amp; engineering&amp;quot;,&amp;quot;Senior managers &amp;amp; execs&amp;quot;,&amp;quot;All occupations average&amp;quot;)data &amp;lt;- data %&amp;gt;% mutate(face = ifelse(occupation %in% categories,&amp;quot;bold&amp;quot;,&amp;quot;plain&amp;quot;),cut = ifelse(occupation %in% categories, nrow(data) + 1 - row_no ,NA))GGPLOT2ggplot(data, aes(x=women_average_annual_salary, xend=men_average_annual_salary, y=reorder(occupation,-row_no))) + geom_dumbbell(colour_x=&amp;quot;#752650&amp;quot;, color = &amp;quot;#b2b2b2&amp;quot;,colour_xend =&amp;quot;#c4cc80&amp;quot;,size = 1,size_x = 3.</description>
    </item>
    
  </channel>
</rss>