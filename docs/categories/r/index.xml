<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Data Viz in ggplot2</title>
    <link>/dataviz-r/categories/r/</link>
    <description>Recent content in R on Data Viz in ggplot2</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/dataviz-r/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How Fedex cut its tax bill to 0</title>
      <link>/dataviz-r/2019/11/22/how-fedex-cut-its-tax-bill-to-0/</link>
      <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/22/how-fedex-cut-its-tax-bill-to-0/</guid>
      <description>Original ImageThe image below was published in New York Times. https://www.nytimes.com/2019/11/17/business/how-fedex-cut-its-tax-bill-to-0.html
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was manually created by studying the chart.
library(dplyr)library(ggplot2)library(cowplot)heads &amp;lt;- c(&amp;quot;Communication services&amp;quot;, &amp;quot;Utilities&amp;quot;, &amp;quot;Consumer discretionary&amp;quot;, &amp;quot;Consumer Staples&amp;quot;, &amp;quot;Financials&amp;quot;, &amp;quot;Industrials&amp;quot;, &amp;quot;Health care&amp;quot;, &amp;quot;Materials&amp;quot;, &amp;quot;Energy&amp;quot;, &amp;quot;Information Technology&amp;quot;, &amp;quot;Real estate&amp;quot;)savings_investment_data &amp;lt;- data.frame(heads = rep(heads,2),by = c(rep(&amp;quot;... effective tax rate&amp;quot;,11),rep(&amp;quot;... capital spending growth rate&amp;quot;,11)),value = Reduce(c,list(etr = c(-15, -14, -12, -11, -9, -8, -5, -5, -4, -4, -1), csgr= c(6, -1, 4, 14, 0, 8, -1, 22, 71, 17, 3))),stringsAsFactors = FALSE)savings_investment_data$by &amp;lt;- factor(x = savings_investment_data$by, levels = c(&amp;quot;.</description>
    </item>
    
    <item>
      <title>India Pollution</title>
      <link>/dataviz-r/2019/11/21/india-pollution/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/21/india-pollution/</guid>
      <description>Original ImageThe image below was featured in Financial Times News website. https://ig.ft.com/india-pollution/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data is downloaded from Nasa Socioeconomic Data and Application Centre.
library(rnaturalearth)library(rnaturalearthdata)library(ggplot2)library(dplyr)library(ggrepel)# file &amp;lt;- &amp;#39;gwr_pm25_2016.tif&amp;#39;# # gdalUtils::gdalwarp(srcfile = file,# dstfile = sub(&amp;#39;\\.tif&amp;#39;,&amp;#39;_resampled.tif&amp;#39;,file),# tr = c(0.1,0.1),# r = &amp;#39;bilinear&amp;#39;)labels_df &amp;lt;- data.frame(stringsAsFactors=FALSE,place = c(&amp;quot;New Delhi&amp;quot;, &amp;quot;Chennai&amp;quot;, &amp;quot;Hyderabad&amp;quot;, &amp;quot;Kolkata&amp;quot;, &amp;quot;Mumbai&amp;quot;,&amp;quot;Wuhan&amp;quot;, &amp;quot;Chengdu&amp;quot;, &amp;quot;Shanghai&amp;quot;, &amp;quot;Xian&amp;quot;, &amp;quot;Harbin&amp;quot;, &amp;quot;Urumqi&amp;quot;,&amp;quot;Beijing&amp;quot;,&amp;quot;CHINA&amp;quot;, &amp;quot;INDIA&amp;quot;),long = c(77.</description>
    </item>
    
    <item>
      <title>Women in Senate</title>
      <link>/dataviz-r/2019/11/19/women-in-senate/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/19/women-in-senate/</guid>
      <description>Original ImageThe image below was published in New York Times. https://archive.nytimes.com/www.nytimes.com/interactive/2013/03/22/us/politics/women-in-the-senate.html
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was manually created by studying the chart.
library(dplyr)library(ggplot2)library(readr)us_sen &amp;lt;- read_csv(&amp;quot;./data/final_data_us_sen.csv&amp;quot;)female_sen_list &amp;lt;- c(&amp;quot;Rebecca Latimer Felton&amp;quot;,&amp;quot;Hattie Caraway&amp;quot;,&amp;quot;Rose McConnell Long&amp;quot;,&amp;quot;Dixie Bibb Graves&amp;quot;,&amp;quot;Gladys Pyle&amp;quot;,&amp;quot;Vera C. Bushfield&amp;quot;,&amp;quot;Margaret Chase Smith&amp;quot;,&amp;quot;Eva Bowring&amp;quot;,&amp;quot;Hazel Abel&amp;quot;,&amp;quot;Maurine Brown Neuberger&amp;quot;,&amp;quot;Elaine S. Edwards&amp;quot;,&amp;quot;Nancy Landon Kassebaum&amp;quot;,&amp;quot;Maryon Pittman Allen&amp;quot;,&amp;quot;Muriel Humphrey&amp;quot;,&amp;quot;Paula Hawkins&amp;quot;,&amp;quot;Mikulski, BarbaraBarbara Mikulski&amp;quot;,&amp;quot;Feinstein, DianneDianne Feinstein&amp;quot;,&amp;quot;Jocelyn Birch Burdick&amp;quot;,&amp;quot;Murray, PattyPatty Murray&amp;quot;,&amp;quot;Carol Moseley-Braun&amp;quot;,&amp;quot;Kay Bailey Hutchison&amp;quot;,&amp;quot;Boxer, BarbaraBarbara Boxer&amp;quot;,&amp;quot;Olympia Snowe&amp;quot;,&amp;quot;Sheila Frahm&amp;quot;,&amp;quot;Mary Landrieu&amp;quot;,&amp;quot;Collins, SusanSusan Collins&amp;quot;,&amp;quot;Blanche Lincoln&amp;quot;,&amp;quot;Cantwell, MariaMaria Cantwell&amp;quot;,&amp;quot;Stabenow, DebbieDebbie Stabenow&amp;quot;,&amp;quot;Hillary Clinton&amp;quot;,&amp;quot;Jean Carnahan&amp;quot;,&amp;quot;Murkowski, LisaLisa Murkowski&amp;quot;,&amp;quot;Elizabeth Dole&amp;quot;,&amp;quot;Klobuchar, AmyAmy Klobuchar&amp;quot;,&amp;quot;McCaskill, ClaireClaire McCaskill&amp;quot;,&amp;quot;Gillibrand, KirstenKirsten Gillibrand&amp;quot;,&amp;quot;Kay Hagan&amp;quot;,&amp;quot;Shaheen, JeanneJeanne Shaheen&amp;quot;,&amp;quot;Ayotte, KellyKelly Ayotte&amp;quot;,&amp;quot;Heitkamp, HeidiHeidi Heitkamp&amp;quot;,&amp;quot;Fischer, DebDeb Fischer&amp;quot;,&amp;quot;Warren, ElizabethElizabeth Warren&amp;quot;,&amp;quot;Baldwin, TammyTammy Baldwin&amp;quot;,&amp;quot;Hirono, MazieMazie Hirono&amp;quot;)us_sen_femal &amp;lt;- dplyr::filter(us_sen, tolower(Senator) %in% tolower(female_sen_list))# it seems that the table with current us senators have name duplicated while scrapingus_sen_femal$Senator &amp;lt;- ifelse(grepl(&amp;quot;,&amp;quot;,us_sen_femal$Senator),sub(&amp;#39;.</description>
    </item>
    
    <item>
      <title>UK EU Uncertainity</title>
      <link>/dataviz-r/2019/11/17/uk-eu-uncertainity/</link>
      <pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/17/uk-eu-uncertainity/</guid>
      <description>Original ImageThe image below was featured in Tableau Public Gallery. https://public.tableau.com/en-us/gallery/uk-and-eu-uncertainty-index?tab=viz-of-the-day&amp;amp;type=viz-of-the-day
Data PreparationBelow is the accompanying code to reproduce the chart above. The data is downloaded from the source mentioned in the caption of image.
library(ggplot2)library(dplyr)library(ggrepel)data &amp;lt;- readxl::read_xlsx(&amp;#39;./data/Europe_Policy_Uncertainty_Data.xlsx&amp;#39;) %&amp;gt;%janitor::clean_names() %&amp;gt;% select(c(&amp;quot;year&amp;quot;,&amp;quot;month&amp;quot;,&amp;quot;european_news_index&amp;quot;,&amp;quot;uk_news_index&amp;quot;)) %&amp;gt;% mutate(date = paste0(year,&amp;quot;-&amp;quot;,month,&amp;quot;-&amp;quot;,&amp;quot;01&amp;quot;), date = as.Date(date)) %&amp;gt;% filter(!is.na(uk_news_index),!is.na(european_news_index)) %&amp;gt;% select(c(&amp;quot;date&amp;quot;,&amp;quot;european_news_index&amp;quot;,&amp;quot;uk_news_index&amp;quot;))data_long &amp;lt;- data %&amp;gt;% tidyr::pivot_longer(-date, names_to = &amp;quot;type&amp;quot;, values_to = &amp;quot;index_value&amp;quot;) %&amp;gt;% mutate(text_label = case_when(date == &amp;#39;1997-05-01&amp;#39; &amp;amp; type == &amp;#39;uk_news_index&amp;#39; ~ &amp;#39;May 1977\nTONY BLAIR\nTOOK OFFICE AS\nPRIME MINISTER&amp;#39;,date == &amp;#39;2007-06-01&amp;#39; &amp;amp; type == &amp;#39;uk_news_index&amp;#39; ~ &amp;#39;June 2007\nGORDON BROWN\nTOOK OFFICE AS\nPRIME MINISTER&amp;#39;,date == &amp;#39;2010-04-01&amp;#39; &amp;amp; type == &amp;#39;uk_news_index&amp;#39; ~ &amp;#39;April 2010\nDAVID CAMERON\nTOOK OFFICE AS\nPRIME MINISTER&amp;#39;,date == &amp;#39;2016-07-01&amp;#39; &amp;amp; type == &amp;#39;uk_news_index&amp;#39; ~ &amp;#39;July 2016\nTHERESA MAY\nTOOK OFFICE AS\nPRIME MINISTER&amp;#39;,date == &amp;#39;2019-07-01&amp;#39; &amp;amp; type == &amp;#39;uk_news_index&amp;#39; ~ &amp;#39;July 2019\nBAFFOON JOHNSON\nTOOK OFFICE AS\nPRIME MINISTER&amp;#39;))GGPLOT2ggplot(data = data_long, aes(x = date, y = index_value, colour = type)) + geom_step(size = 1) + geom_text_repel(aes(label = text_label), direction = &amp;quot;x&amp;quot;, segment.</description>
    </item>
    
    <item>
      <title>Surgeons are Red, Psychiatrists are Blue</title>
      <link>/dataviz-r/2019/11/16/surgeons-are-red-psychiatrists-are-blue/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/16/surgeons-are-red-psychiatrists-are-blue/</guid>
      <description>Original ImageThe image below was published in New York Times. https://www.nytimes.com/2016/10/07/upshot/your-surgeon-is-probably-a-republican-your-psychiatrist-probably-a-democrat.html
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was manually created by studying the chart.
library(ggplot2)library(dplyr)library(cowplot)df_physician_affiliation &amp;lt;- data.frame(speciality = c(&amp;quot;Surgery&amp;quot;,&amp;quot;Anesthesiology&amp;quot;,&amp;quot;Urology&amp;quot;,&amp;quot;ENT&amp;quot;,&amp;quot;Radiology&amp;quot;,&amp;quot;Ophthalmology&amp;quot;,&amp;quot;Physical/Rehab&amp;quot;,&amp;quot;Dermatology&amp;quot;,&amp;quot;Family medicine&amp;quot;,&amp;quot;Emergency&amp;quot;,&amp;quot;Cardiology&amp;quot;,&amp;quot;Gastroenterology&amp;quot;,&amp;quot;Pulmonary&amp;quot;,&amp;quot;Ob/Gyn&amp;quot;,&amp;quot;All doctors&amp;quot;,&amp;quot;Oncology&amp;quot;,&amp;quot;Nephrology&amp;quot;,&amp;quot;Pathology&amp;quot;,&amp;quot;Internal medicine&amp;quot;,&amp;quot;Neurology&amp;quot;,&amp;quot;Endocrinology&amp;quot;,&amp;quot;Geriatrics&amp;quot;,&amp;quot;Pediatrics&amp;quot;,&amp;quot;Psychiatry&amp;quot;,&amp;quot;Infectious disease&amp;quot;),republican = c(67,65,62,61,59,57,54,53,52,51,49,49,48,47,46,43,43,42,41,40,40,37,32,24,23)) %&amp;gt;% mutate(democrats = 100-republican)df_physician_affiliation &amp;lt;- df_physician_affiliation %&amp;gt;% reshape2::melt()df_physician_affiliation$speciality &amp;lt;- factor(df_physician_affiliation$speciality,levels = rev(c(&amp;quot;Surgery&amp;quot;,&amp;quot;Anesthesiology&amp;quot;,&amp;quot;Urology&amp;quot;,&amp;quot;ENT&amp;quot;,&amp;quot;Radiology&amp;quot;,&amp;quot;Ophthalmology&amp;quot;,&amp;quot;Physical/Rehab&amp;quot;,&amp;quot;Dermatology&amp;quot;,&amp;quot;Family medicine&amp;quot;,&amp;quot;Emergency&amp;quot;,&amp;quot;Cardiology&amp;quot;,&amp;quot;Gastroenterology&amp;quot;,&amp;quot;Pulmonary&amp;quot;,&amp;quot;Ob/Gyn&amp;quot;,&amp;quot;All doctors&amp;quot;,&amp;quot;Oncology&amp;quot;,&amp;quot;Nephrology&amp;quot;,&amp;quot;Pathology&amp;quot;,&amp;quot;Internal medicine&amp;quot;,&amp;quot;Neurology&amp;quot;,&amp;quot;Endocrinology&amp;quot;,&amp;quot;Geriatrics&amp;quot;,&amp;quot;Pediatrics&amp;quot;,&amp;quot;Psychiatry&amp;quot;,&amp;quot;Infectious disease&amp;quot;)))GGPLOT2# Multi line Caption alignment using cowplotp &amp;lt;- ggplot(df_physician_affiliation) + geom_bar(stat = &amp;quot;identity&amp;quot;, aes(x=speciality,y=value,fill=variable), position = position_stack(reverse = TRUE)) + scale_fill_manual(values = c(&amp;quot;#D75C5C&amp;quot;,&amp;quot;#3989CB&amp;quot;)) +geom_text(data = df_physician_affiliation[1:25,],aes(x=speciality,y=value-3,label=paste0(value,&amp;quot;%&amp;quot;)),color = &amp;quot;white&amp;quot;) +coord_flip() +xlab(&amp;quot;&amp;quot;) + ylab(&amp;quot;&amp;quot;) +theme_classic() +theme(panel.</description>
    </item>
    
    <item>
      <title>California Housing Problem</title>
      <link>/dataviz-r/2019/11/15/california-housing-problem/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/15/california-housing-problem/</guid>
      <description>Original ImageThe image below was featured in BloomBerg. https://www.bloomberg.com/graphics/2019-california-housing-crisis/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data is obtained from the source mentioned in the image.
library(ggplot2)library(dplyr)library(geofacet)library(grid)data &amp;lt;- read.csv(file = &amp;#39;./data/us_housing_burdened.csv&amp;#39;, stringsAsFactors = F) %&amp;gt;%janitor::clean_names() %&amp;gt;% mutate_at(.vars = c(&amp;quot;owner_burdened&amp;quot;,&amp;quot;renter_burdened&amp;quot;,&amp;quot;owner_per&amp;quot;,&amp;quot;renter_per&amp;quot;), .funs = function(x){gsub(&amp;quot;,&amp;quot;,&amp;quot;&amp;quot;,x)}) %&amp;gt;% mutate_at(.vars = c(&amp;quot;owner_burdened&amp;quot;,&amp;quot;renter_burdened&amp;quot;,&amp;quot;owner_per&amp;quot;,&amp;quot;renter_per&amp;quot;), .funs = as.numeric) %&amp;gt;% mutate(cost_burdened = (owner_burdened+renter_burdened)/((owner_burdened/owner_per)+(renter_burdened/renter_per)), label = state) %&amp;gt;% left_join(.</description>
    </item>
    
    <item>
      <title>Municipalities in Spain by Population</title>
      <link>/dataviz-r/2019/11/14/municipalities-in-spain-by-population/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/14/municipalities-in-spain-by-population/</guid>
      <description>Original ImageThe image below was published on reddit [/r/dataisbeautiful] by user /u/amunozo1. https://www.reddit.com/r/dataisbeautiful/comments/dswb9k/oc_municipalities_in_spain_by_population/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was shared by the user at their github repository. https://github.com/amunozo/population-by-municipalities.
library(dplyr)library(readxl)library(ggplot2)library(janitor)spain_pop &amp;lt;- readxl::read_xls(path = &amp;quot;./data/listado-longitud-latitud-municipios-espana.xls&amp;quot;,skip = 2) %&amp;gt;% clean_names()GGPLOT2ggplot(data = spain_pop, aes(x=longitud,y=latitud,size=habitantes)) +geom_point(colour = &amp;quot;#cffdfd&amp;quot;, alpha = 0.5, shape = 19) +scale_size_area(max_size = 30) +theme_classic() + theme(panel.</description>
    </item>
    
    <item>
      <title>Rotten Tomatoes</title>
      <link>/dataviz-r/2019/11/13/rotten-tomatoes/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/13/rotten-tomatoes/</guid>
      <description>Original ImageThe image below was featured in Information is Beatiful. https://informationisbeautiful.net/visualizations/star-wars-last-jedi-one-of-the-biggest-rotten-tomatoes-audience-vs-critics-score-splits-ever/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was sourced from data export options in the link above.
library(ggplot2)library(ggrepel)library(dplyr)data &amp;lt;- read.csv(&amp;#39;./data/movies.csv&amp;#39;, stringsAsFactors = F) %&amp;gt;% janitor::clean_names() %&amp;gt;% filter(x_gap &amp;gt;= 15, genre %in% c(&amp;quot;Sci-fi / Fantasy&amp;quot;,&amp;quot;Thriller&amp;quot;,&amp;quot;horror&amp;quot;,&amp;quot;Horror&amp;quot;,&amp;quot;drama&amp;quot;,&amp;quot;Drama&amp;quot;,&amp;quot;comedy&amp;quot;,&amp;quot;Comedy&amp;quot;,&amp;quot;Action / Adventure&amp;quot;)) %&amp;gt;% mutate(year = year, budget_million = as.numeric(budget_million),radius = sqrt(budget_million/pi)) %&amp;gt;% filter(budget_million!</description>
    </item>
    
    <item>
      <title>Population of London</title>
      <link>/dataviz-r/2019/11/12/population-of-london/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/12/population-of-london/</guid>
      <description>Original ImageThe image below was featured in Tableau Public Gallery. https://public.tableau.com/profile/daniel.caroli#!/vizhome/ThePopulationofLondon/Main
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was sourced from data export options in the link above.
library(dplyr)library(tidyr)library(ggplot2)library(readr)library(janitor)population_london &amp;lt;- readr::read_csv(&amp;quot;./data/Adjusted_data.csv&amp;quot;) %&amp;gt;% clean_names() %&amp;gt;% select(age_group, label_position, female, calculation1, male, year) %&amp;gt;% mutate(female = gsub(pattern = &amp;quot;K&amp;quot;, replacement = &amp;quot;&amp;quot;, x = female) %&amp;gt;% as.</description>
    </item>
    
    <item>
      <title>Gender Gap</title>
      <link>/dataviz-r/2019/11/11/gender-gap/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/11/gender-gap/</guid>
      <description>Original ImageThe image below was published in Information is Beautiful.https://informationisbeautiful.net/visualizations/gender-pay-gap/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was sourced from US Bureau of Labor Statistics, UK Office of National Statistics, The Guardian Datablog.
library(ggplot2)library(ggalt)library(dplyr)data &amp;lt;- readxl::read_xlsx(&amp;#39;./data/gender_gap.xlsx&amp;#39;, sheet = &amp;quot;US&amp;quot;) %&amp;gt;%janitor::clean_names()### Remove duplicates based on occupation without changing orderdata &amp;lt;- distinct(data,occupation, .keep_all= TRUE) %&amp;gt;% mutate(row_no = row_number())categories &amp;lt;- c(&amp;quot;admin &amp;amp; organisation&amp;quot;,&amp;quot;Care &amp;amp; education&amp;quot;,&amp;quot;Creative &amp;amp; media&amp;quot;,&amp;quot;Law &amp;amp; justice&amp;quot;,&amp;quot;Manual Work&amp;quot;,&amp;quot;Sales &amp;amp; serving others&amp;quot;,&amp;quot;Science, tech &amp;amp; engineering&amp;quot;,&amp;quot;Senior managers &amp;amp; execs&amp;quot;,&amp;quot;All occupations average&amp;quot;)data &amp;lt;- data %&amp;gt;% mutate(face = ifelse(occupation %in% categories,&amp;quot;bold&amp;quot;,&amp;quot;plain&amp;quot;),cut = ifelse(occupation %in% categories, nrow(data) + 1 - row_no ,NA))GGPLOT2ggplot(data, aes(x=women_average_annual_salary, xend=men_average_annual_salary, y=reorder(occupation,-row_no))) + geom_dumbbell(colour_x=&amp;quot;#752650&amp;quot;, color = &amp;quot;#b2b2b2&amp;quot;,colour_xend =&amp;quot;#c4cc80&amp;quot;,size = 1,size_x = 3.</description>
    </item>
    
    <item>
      <title>500 Jump Scares</title>
      <link>/dataviz-r/2019/11/10/500-jump-scares/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/10/500-jump-scares/</guid>
      <description>Original ImageThe image below was published on reddit [/r/dataisbeautiful] by user /u/Delafields as a submission for the October month challenge titled “Visualize the Jump-Scares for over 500 horror, thriller, and sci-fi Movies” https://www.reddit.com/r/dataisbeautiful/comments/dei68x/battle_dataviz_battle_for_the_month_of_october/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was scraped from the website https://wheresthejump.com/full-movie-list/.
library(dplyr)library(rvest)library(xml2)library(ggplot2)library(ggbeeswarm)library(janitor)horror_movie &amp;lt;- xml2::read_html(x = &amp;quot;https://wheresthejump.com/full-movie-list/&amp;quot;) %&amp;gt;%html_nodes(xpath=&amp;#39;//*[@id=&amp;quot;tablepress-1&amp;quot;]&amp;#39;) %&amp;gt;%html_table() %&amp;gt;% .</description>
    </item>
    
    <item>
      <title>Can money buy happiness?</title>
      <link>/dataviz-r/2019/11/09/can-money-buy-happiness/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/09/can-money-buy-happiness/</guid>
      <description>Original ImageThe image below was published in this website. https://happiness.datadesign.studio/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data is available on the source website.
library(dplyr)library(ggplot2)library(ggiraph)data &amp;lt;- readxl::read_xlsx(&amp;#39;./data/happiness/data.xlsx&amp;#39;, sheet = 1) %&amp;gt;% janitor::clean_names()data &amp;lt;- data %&amp;gt;% filter(world_happiness_report_score!=&amp;#39;-&amp;#39;, gdp_per_capita_ppp!=&amp;#39;&amp;#39;) %&amp;gt;% mutate_at(.vars = vars(c(&amp;quot;world_happiness_report_score&amp;quot;,&amp;quot;gdp_per_capita_ppp&amp;quot;)), .funs = as.numeric) lookup &amp;lt;- read.csv(&amp;#39;./data/happiness/Countries-Continents.csv&amp;#39;, stringsAsFactors = F)data &amp;lt;- inner_join(data, lookup, by = c(&amp;quot;indicator&amp;quot; = &amp;quot;Country&amp;quot;)) %&amp;gt;% mutate(Continent = toupper(Continent))GGPLOT2p &amp;lt;- ggplot(data = data, aes(x = gdp_per_capita_ppp, y = world_happiness_report_score, size = population, colour = Continent)) + geom_point_interactive(alpha = 0.</description>
    </item>
    
    <item>
      <title>Trump Approval Ratings</title>
      <link>/dataviz-r/2019/11/08/trump-approval-ratings/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/08/trump-approval-ratings/</guid>
      <description>Original ImageThe image below was published in FiveThirtyEight. https://projects.fivethirtyeight.com/trump-approval-ratings/
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was download from the link referred above.
library(dplyr)library(ggthemes)library(tidyr)library(ggplot2)library(grid)library(gridExtra)approval_polllist &amp;lt;- readr::read_csv(&amp;quot;./data/approval_polllist.csv&amp;quot;) %&amp;gt;% mutate(modeldate = as.Date(x = modeldate, format = &amp;quot;%m/%d/%Y&amp;quot;),startdate = as.Date(x = startdate, format = &amp;quot;%m/%d/%Y&amp;quot;),enddate = as.Date(x = enddate, format = &amp;quot;%m/%d/%Y&amp;quot;),createddate = as.</description>
    </item>
    
    <item>
      <title>Mapping 50 years of ice loss in glaciers</title>
      <link>/dataviz-r/2019/11/07/mapping-50-years-of-ice-loss-in-glaciers/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/07/mapping-50-years-of-ice-loss-in-glaciers/</guid>
      <description>Original ImageThe image below was published in New York Times. https://www.nytimes.com/interactive/2017/05/24/climate/mapping-50-years-of-ice-loss-in-glacier-national-park.html
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was manually created by studying the chart.
library(sf)library(maptools) library(rgdal)library(ggplot2)library(dplyr)common &amp;lt;- c(&amp;quot;GLACNAME&amp;quot;,&amp;quot;geometry&amp;quot;)glac_1966 &amp;lt;- sf::st_read(&amp;#39;./data/glacier/GNPglaciers_1966.shp&amp;#39;) %&amp;gt;% dplyr::select(c(common,&amp;quot;Area1966&amp;quot;)) %&amp;gt;% mutate(year = &amp;quot;1966&amp;quot;, GLACNAME = as.character(GLACNAME), GLACNAME = ifelse(GLACNAME == &amp;#39;N. Swiftcurrent Glacier&amp;#39;,&amp;#39;North Swiftcurrent Glacier&amp;#39;, GLACNAME)) %&amp;gt;% rename(Area = Area1966)## Reading layer `GNPglaciers_1966&amp;#39; from data source `C:\Users\actify\Desktop\projects\misc\dataviz-r\content\post\data\glacier\GNPglaciers_1966.</description>
    </item>
    
    <item>
      <title>Michael Phelps since 2000</title>
      <link>/dataviz-r/2019/11/06/michael-phelps-since-2000/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/dataviz-r/2019/11/06/michael-phelps-since-2000/</guid>
      <description>Original ImageThe image below was published in New York Times. https://www.nytimes.com/interactive/2016/08/09/sports/olympics/2016-08-09-olympics-phelps-vs-phelps.html
Data PreparationBelow is the accompanying code to reproduce the chart above. The data was manually created by studying the chart.
library(dplyr)library(tidyr)library(ggplot2)library(grid)library(gridExtra)phelps_medals &amp;lt;- readxl::read_excel(&amp;quot;./data/phelps_medals.xlsx&amp;quot;)phelps_medals$Event_Type &amp;lt;- factor(phelps_medals$Event_Type, levels = rev(phelps_medals$Event_Type %&amp;gt;% unique()))phelps_medals$Competetion_Name &amp;lt;- factor(phelps_medals$Competetion_Name, levels = phelps_medals$Competetion_Name %&amp;gt;% unique())GGPLOT2p &amp;lt;- ggplot(phelps_medals, aes(x=Competetion_Name,y=Event_Type)) + geom_tile(aes(fill=Result)) + theme_bw() + scale_fill_manual(values=c(&amp;quot;#FAE155&amp;quot;,&amp;quot;#DBDBDB&amp;quot;,&amp;quot;#C6A891&amp;quot;,&amp;quot;#FFFFFF&amp;quot;,&amp;quot;#FFFFFF&amp;quot;,&amp;quot;#FFFFFF&amp;quot;,&amp;quot;#FFFFFF&amp;quot;,&amp;quot;#FFFFFF&amp;quot;)) +theme(panel.</description>
    </item>
    
  </channel>
</rss>